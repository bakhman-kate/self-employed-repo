version: "3.4"

services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-6.3.*}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    container_name: php
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgresuser}:${POSTGRES_PASSWORD:-fgre687VRmhY}@database:5432/${POSTGRES_DB:-postgresdatabase}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-self-employed.local}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-asdfgt.qwerty.zxcvb}
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-self-employed.local, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-asdfgt.qwerty.zxcvb}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-asdfgt.qwerty.zxcvb}
    restart: unless-stopped
    container_name: caddy
    networks:
      - app-network
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  memcached:
    image: memcached:latest
    ports:
      - "127.0.0.1:11211:11211"
    container_name: memcached
    command: memcached -m 1024m

  redis:
    image: redis:4.0
    container_name: redis
    networks:
      - app-network

volumes:
  php_socket:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: "bridge"
